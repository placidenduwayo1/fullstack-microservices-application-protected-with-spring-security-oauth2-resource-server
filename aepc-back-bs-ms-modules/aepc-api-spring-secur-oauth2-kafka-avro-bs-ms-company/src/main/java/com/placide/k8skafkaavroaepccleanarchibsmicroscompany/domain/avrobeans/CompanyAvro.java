/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class CompanyAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8006367970828872756L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"CompanyAvro\",\"namespace\":\"com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans\",\"fields\":[{\"name\":\"companyId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"agency\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"connectedDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"addressId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"address\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"addressId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"num\",\"type\":\"int\"},{\"name\":\"street\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"pb\",\"type\":\"int\"},{\"name\":\"city\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<CompanyAvro> ENCODER =
      new BinaryMessageEncoder<CompanyAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<CompanyAvro> DECODER =
      new BinaryMessageDecoder<CompanyAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<CompanyAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<CompanyAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<CompanyAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<CompanyAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this CompanyAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a CompanyAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a CompanyAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static CompanyAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String companyId;
  private java.lang.String name;
  private java.lang.String agency;
  private java.lang.String type;
  private java.lang.String connectedDate;
  private java.lang.String addressId;
  private com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address address;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public CompanyAvro() {}

  /**
   * All-args constructor.
   * @param companyId The new value for companyId
   * @param name The new value for name
   * @param agency The new value for agency
   * @param type The new value for type
   * @param connectedDate The new value for connectedDate
   * @param addressId The new value for addressId
   * @param address The new value for address
   */
  public CompanyAvro(java.lang.String companyId, java.lang.String name, java.lang.String agency, java.lang.String type, java.lang.String connectedDate, java.lang.String addressId, com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address address) {
    this.companyId = companyId;
    this.name = name;
    this.agency = agency;
    this.type = type;
    this.connectedDate = connectedDate;
    this.addressId = addressId;
    this.address = address;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return companyId;
    case 1: return name;
    case 2: return agency;
    case 3: return type;
    case 4: return connectedDate;
    case 5: return addressId;
    case 6: return address;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: companyId = value$ != null ? value$.toString() : null; break;
    case 1: name = value$ != null ? value$.toString() : null; break;
    case 2: agency = value$ != null ? value$.toString() : null; break;
    case 3: type = value$ != null ? value$.toString() : null; break;
    case 4: connectedDate = value$ != null ? value$.toString() : null; break;
    case 5: addressId = value$ != null ? value$.toString() : null; break;
    case 6: address = (com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'companyId' field.
   * @return The value of the 'companyId' field.
   */
  public java.lang.String getCompanyId() {
    return companyId;
  }


  /**
   * Sets the value of the 'companyId' field.
   * @param value the value to set.
   */
  public void setCompanyId(java.lang.String value) {
    this.companyId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.String getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'agency' field.
   * @return The value of the 'agency' field.
   */
  public java.lang.String getAgency() {
    return agency;
  }


  /**
   * Sets the value of the 'agency' field.
   * @param value the value to set.
   */
  public void setAgency(java.lang.String value) {
    this.agency = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'connectedDate' field.
   * @return The value of the 'connectedDate' field.
   */
  public java.lang.String getConnectedDate() {
    return connectedDate;
  }


  /**
   * Sets the value of the 'connectedDate' field.
   * @param value the value to set.
   */
  public void setConnectedDate(java.lang.String value) {
    this.connectedDate = value;
  }

  /**
   * Gets the value of the 'addressId' field.
   * @return The value of the 'addressId' field.
   */
  public java.lang.String getAddressId() {
    return addressId;
  }


  /**
   * Sets the value of the 'addressId' field.
   * @param value the value to set.
   */
  public void setAddressId(java.lang.String value) {
    this.addressId = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address getAddress() {
    return address;
  }


  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address value) {
    this.address = value;
  }

  /**
   * Creates a new CompanyAvro RecordBuilder.
   * @return A new CompanyAvro RecordBuilder
   */
  public static com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder newBuilder() {
    return new com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder();
  }

  /**
   * Creates a new CompanyAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new CompanyAvro RecordBuilder
   */
  public static com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder newBuilder(com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder other) {
    if (other == null) {
      return new com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder();
    } else {
      return new com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder(other);
    }
  }

  /**
   * Creates a new CompanyAvro RecordBuilder by copying an existing CompanyAvro instance.
   * @param other The existing instance to copy.
   * @return A new CompanyAvro RecordBuilder
   */
  public static com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder newBuilder(com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro other) {
    if (other == null) {
      return new com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder();
    } else {
      return new com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for CompanyAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<CompanyAvro>
    implements org.apache.avro.data.RecordBuilder<CompanyAvro> {

    private java.lang.String companyId;
    private java.lang.String name;
    private java.lang.String agency;
    private java.lang.String type;
    private java.lang.String connectedDate;
    private java.lang.String addressId;
    private com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address address;
    private com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address.Builder addressBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.companyId)) {
        this.companyId = data().deepCopy(fields()[0].schema(), other.companyId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.agency)) {
        this.agency = data().deepCopy(fields()[2].schema(), other.agency);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.connectedDate)) {
        this.connectedDate = data().deepCopy(fields()[4].schema(), other.connectedDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.addressId)) {
        this.addressId = data().deepCopy(fields()[5].schema(), other.addressId);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.address)) {
        this.address = data().deepCopy(fields()[6].schema(), other.address);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasAddressBuilder()) {
        this.addressBuilder = com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address.newBuilder(other.getAddressBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing CompanyAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.companyId)) {
        this.companyId = data().deepCopy(fields()[0].schema(), other.companyId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.agency)) {
        this.agency = data().deepCopy(fields()[2].schema(), other.agency);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.type)) {
        this.type = data().deepCopy(fields()[3].schema(), other.type);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.connectedDate)) {
        this.connectedDate = data().deepCopy(fields()[4].schema(), other.connectedDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.addressId)) {
        this.addressId = data().deepCopy(fields()[5].schema(), other.addressId);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.address)) {
        this.address = data().deepCopy(fields()[6].schema(), other.address);
        fieldSetFlags()[6] = true;
      }
      this.addressBuilder = null;
    }

    /**
      * Gets the value of the 'companyId' field.
      * @return The value.
      */
    public java.lang.String getCompanyId() {
      return companyId;
    }


    /**
      * Sets the value of the 'companyId' field.
      * @param value The value of 'companyId'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder setCompanyId(java.lang.String value) {
      validate(fields()[0], value);
      this.companyId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'companyId' field has been set.
      * @return True if the 'companyId' field has been set, false otherwise.
      */
    public boolean hasCompanyId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'companyId' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder clearCompanyId() {
      companyId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'agency' field.
      * @return The value.
      */
    public java.lang.String getAgency() {
      return agency;
    }


    /**
      * Sets the value of the 'agency' field.
      * @param value The value of 'agency'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder setAgency(java.lang.String value) {
      validate(fields()[2], value);
      this.agency = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'agency' field has been set.
      * @return True if the 'agency' field has been set, false otherwise.
      */
    public boolean hasAgency() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'agency' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder clearAgency() {
      agency = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder setType(java.lang.String value) {
      validate(fields()[3], value);
      this.type = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder clearType() {
      type = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'connectedDate' field.
      * @return The value.
      */
    public java.lang.String getConnectedDate() {
      return connectedDate;
    }


    /**
      * Sets the value of the 'connectedDate' field.
      * @param value The value of 'connectedDate'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder setConnectedDate(java.lang.String value) {
      validate(fields()[4], value);
      this.connectedDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'connectedDate' field has been set.
      * @return True if the 'connectedDate' field has been set, false otherwise.
      */
    public boolean hasConnectedDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'connectedDate' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder clearConnectedDate() {
      connectedDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressId' field.
      * @return The value.
      */
    public java.lang.String getAddressId() {
      return addressId;
    }


    /**
      * Sets the value of the 'addressId' field.
      * @param value The value of 'addressId'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder setAddressId(java.lang.String value) {
      validate(fields()[5], value);
      this.addressId = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'addressId' field has been set.
      * @return True if the 'addressId' field has been set, false otherwise.
      */
    public boolean hasAddressId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'addressId' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder clearAddressId() {
      addressId = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address getAddress() {
      return address;
    }


    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder setAddress(com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address value) {
      validate(fields()[6], value);
      this.addressBuilder = null;
      this.address = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'address' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address.Builder getAddressBuilder() {
      if (addressBuilder == null) {
        if (hasAddress()) {
          setAddressBuilder(com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address.newBuilder(address));
        } else {
          setAddressBuilder(com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address.newBuilder());
        }
      }
      return addressBuilder;
    }

    /**
     * Sets the Builder instance for the 'address' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder setAddressBuilder(com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address.Builder value) {
      clearAddress();
      addressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'address' field has an active Builder instance
     * @return True if the 'address' field has an active Builder instance
     */
    public boolean hasAddressBuilder() {
      return addressBuilder != null;
    }

    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.CompanyAvro.Builder clearAddress() {
      address = null;
      addressBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public CompanyAvro build() {
      try {
        CompanyAvro record = new CompanyAvro();
        record.companyId = fieldSetFlags()[0] ? this.companyId : (java.lang.String) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.agency = fieldSetFlags()[2] ? this.agency : (java.lang.String) defaultValue(fields()[2]);
        record.type = fieldSetFlags()[3] ? this.type : (java.lang.String) defaultValue(fields()[3]);
        record.connectedDate = fieldSetFlags()[4] ? this.connectedDate : (java.lang.String) defaultValue(fields()[4]);
        record.addressId = fieldSetFlags()[5] ? this.addressId : (java.lang.String) defaultValue(fields()[5]);
        if (addressBuilder != null) {
          try {
            record.address = this.addressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("address"));
            throw e;
          }
        } else {
          record.address = fieldSetFlags()[6] ? this.address : (com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address) defaultValue(fields()[6]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<CompanyAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<CompanyAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<CompanyAvro>
    READER$ = (org.apache.avro.io.DatumReader<CompanyAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.companyId);

    out.writeString(this.name);

    out.writeString(this.agency);

    out.writeString(this.type);

    out.writeString(this.connectedDate);

    out.writeString(this.addressId);

    this.address.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.companyId = in.readString();

      this.name = in.readString();

      this.agency = in.readString();

      this.type = in.readString();

      this.connectedDate = in.readString();

      this.addressId = in.readString();

      if (this.address == null) {
        this.address = new com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address();
      }
      this.address.customDecode(in);

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.companyId = in.readString();
          break;

        case 1:
          this.name = in.readString();
          break;

        case 2:
          this.agency = in.readString();
          break;

        case 3:
          this.type = in.readString();
          break;

        case 4:
          this.connectedDate = in.readString();
          break;

        case 5:
          this.addressId = in.readString();
          break;

        case 6:
          if (this.address == null) {
            this.address = new com.placide.k8skafkaavroaepccleanarchibsmicroscompany.domain.avrobeans.Address();
          }
          this.address.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










