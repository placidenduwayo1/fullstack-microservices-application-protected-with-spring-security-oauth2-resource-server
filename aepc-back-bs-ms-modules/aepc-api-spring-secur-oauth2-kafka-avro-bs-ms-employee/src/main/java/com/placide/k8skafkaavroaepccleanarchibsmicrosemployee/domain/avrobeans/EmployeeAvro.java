/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EmployeeAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1594938338961687932L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EmployeeAvro\",\"namespace\":\"com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans\",\"fields\":[{\"name\":\"employeeId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"firstname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lastname\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"email\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"hireDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"state\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"role\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"addressId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"address\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"addressId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"num\",\"type\":\"int\"},{\"name\":\"street\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"pb\",\"type\":\"int\"},{\"name\":\"city\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"country\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EmployeeAvro> ENCODER =
      new BinaryMessageEncoder<EmployeeAvro>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EmployeeAvro> DECODER =
      new BinaryMessageDecoder<EmployeeAvro>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EmployeeAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EmployeeAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EmployeeAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EmployeeAvro>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EmployeeAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EmployeeAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EmployeeAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EmployeeAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String employeeId;
  private java.lang.String firstname;
  private java.lang.String lastname;
  private java.lang.String email;
  private java.lang.String hireDate;
  private java.lang.String state;
  private java.lang.String role;
  private java.lang.String addressId;
  private com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address address;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EmployeeAvro() {}

  /**
   * All-args constructor.
   * @param employeeId The new value for employeeId
   * @param firstname The new value for firstname
   * @param lastname The new value for lastname
   * @param email The new value for email
   * @param hireDate The new value for hireDate
   * @param state The new value for state
   * @param role The new value for role
   * @param addressId The new value for addressId
   * @param address The new value for address
   */
  public EmployeeAvro(java.lang.String employeeId, java.lang.String firstname, java.lang.String lastname, java.lang.String email, java.lang.String hireDate, java.lang.String state, java.lang.String role, java.lang.String addressId, com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address address) {
    this.employeeId = employeeId;
    this.firstname = firstname;
    this.lastname = lastname;
    this.email = email;
    this.hireDate = hireDate;
    this.state = state;
    this.role = role;
    this.addressId = addressId;
    this.address = address;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return employeeId;
    case 1: return firstname;
    case 2: return lastname;
    case 3: return email;
    case 4: return hireDate;
    case 5: return state;
    case 6: return role;
    case 7: return addressId;
    case 8: return address;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: employeeId = value$ != null ? value$.toString() : null; break;
    case 1: firstname = value$ != null ? value$.toString() : null; break;
    case 2: lastname = value$ != null ? value$.toString() : null; break;
    case 3: email = value$ != null ? value$.toString() : null; break;
    case 4: hireDate = value$ != null ? value$.toString() : null; break;
    case 5: state = value$ != null ? value$.toString() : null; break;
    case 6: role = value$ != null ? value$.toString() : null; break;
    case 7: addressId = value$ != null ? value$.toString() : null; break;
    case 8: address = (com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'employeeId' field.
   * @return The value of the 'employeeId' field.
   */
  public java.lang.String getEmployeeId() {
    return employeeId;
  }


  /**
   * Sets the value of the 'employeeId' field.
   * @param value the value to set.
   */
  public void setEmployeeId(java.lang.String value) {
    this.employeeId = value;
  }

  /**
   * Gets the value of the 'firstname' field.
   * @return The value of the 'firstname' field.
   */
  public java.lang.String getFirstname() {
    return firstname;
  }


  /**
   * Sets the value of the 'firstname' field.
   * @param value the value to set.
   */
  public void setFirstname(java.lang.String value) {
    this.firstname = value;
  }

  /**
   * Gets the value of the 'lastname' field.
   * @return The value of the 'lastname' field.
   */
  public java.lang.String getLastname() {
    return lastname;
  }


  /**
   * Sets the value of the 'lastname' field.
   * @param value the value to set.
   */
  public void setLastname(java.lang.String value) {
    this.lastname = value;
  }

  /**
   * Gets the value of the 'email' field.
   * @return The value of the 'email' field.
   */
  public java.lang.String getEmail() {
    return email;
  }


  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.String value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'hireDate' field.
   * @return The value of the 'hireDate' field.
   */
  public java.lang.String getHireDate() {
    return hireDate;
  }


  /**
   * Sets the value of the 'hireDate' field.
   * @param value the value to set.
   */
  public void setHireDate(java.lang.String value) {
    this.hireDate = value;
  }

  /**
   * Gets the value of the 'state' field.
   * @return The value of the 'state' field.
   */
  public java.lang.String getState() {
    return state;
  }


  /**
   * Sets the value of the 'state' field.
   * @param value the value to set.
   */
  public void setState(java.lang.String value) {
    this.state = value;
  }

  /**
   * Gets the value of the 'role' field.
   * @return The value of the 'role' field.
   */
  public java.lang.String getRole() {
    return role;
  }


  /**
   * Sets the value of the 'role' field.
   * @param value the value to set.
   */
  public void setRole(java.lang.String value) {
    this.role = value;
  }

  /**
   * Gets the value of the 'addressId' field.
   * @return The value of the 'addressId' field.
   */
  public java.lang.String getAddressId() {
    return addressId;
  }


  /**
   * Sets the value of the 'addressId' field.
   * @param value the value to set.
   */
  public void setAddressId(java.lang.String value) {
    this.addressId = value;
  }

  /**
   * Gets the value of the 'address' field.
   * @return The value of the 'address' field.
   */
  public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address getAddress() {
    return address;
  }


  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address value) {
    this.address = value;
  }

  /**
   * Creates a new EmployeeAvro RecordBuilder.
   * @return A new EmployeeAvro RecordBuilder
   */
  public static com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder newBuilder() {
    return new com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder();
  }

  /**
   * Creates a new EmployeeAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EmployeeAvro RecordBuilder
   */
  public static com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder newBuilder(com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder other) {
    if (other == null) {
      return new com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder();
    } else {
      return new com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder(other);
    }
  }

  /**
   * Creates a new EmployeeAvro RecordBuilder by copying an existing EmployeeAvro instance.
   * @param other The existing instance to copy.
   * @return A new EmployeeAvro RecordBuilder
   */
  public static com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder newBuilder(com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro other) {
    if (other == null) {
      return new com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder();
    } else {
      return new com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for EmployeeAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EmployeeAvro>
    implements org.apache.avro.data.RecordBuilder<EmployeeAvro> {

    private java.lang.String employeeId;
    private java.lang.String firstname;
    private java.lang.String lastname;
    private java.lang.String email;
    private java.lang.String hireDate;
    private java.lang.String state;
    private java.lang.String role;
    private java.lang.String addressId;
    private com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address address;
    private com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address.Builder addressBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.employeeId)) {
        this.employeeId = data().deepCopy(fields()[0].schema(), other.employeeId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.firstname)) {
        this.firstname = data().deepCopy(fields()[1].schema(), other.firstname);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.lastname)) {
        this.lastname = data().deepCopy(fields()[2].schema(), other.lastname);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.hireDate)) {
        this.hireDate = data().deepCopy(fields()[4].schema(), other.hireDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.state)) {
        this.state = data().deepCopy(fields()[5].schema(), other.state);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.role)) {
        this.role = data().deepCopy(fields()[6].schema(), other.role);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.addressId)) {
        this.addressId = data().deepCopy(fields()[7].schema(), other.addressId);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.address)) {
        this.address = data().deepCopy(fields()[8].schema(), other.address);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasAddressBuilder()) {
        this.addressBuilder = com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address.newBuilder(other.getAddressBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing EmployeeAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.employeeId)) {
        this.employeeId = data().deepCopy(fields()[0].schema(), other.employeeId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.firstname)) {
        this.firstname = data().deepCopy(fields()[1].schema(), other.firstname);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.lastname)) {
        this.lastname = data().deepCopy(fields()[2].schema(), other.lastname);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.hireDate)) {
        this.hireDate = data().deepCopy(fields()[4].schema(), other.hireDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.state)) {
        this.state = data().deepCopy(fields()[5].schema(), other.state);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.role)) {
        this.role = data().deepCopy(fields()[6].schema(), other.role);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.addressId)) {
        this.addressId = data().deepCopy(fields()[7].schema(), other.addressId);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.address)) {
        this.address = data().deepCopy(fields()[8].schema(), other.address);
        fieldSetFlags()[8] = true;
      }
      this.addressBuilder = null;
    }

    /**
      * Gets the value of the 'employeeId' field.
      * @return The value.
      */
    public java.lang.String getEmployeeId() {
      return employeeId;
    }


    /**
      * Sets the value of the 'employeeId' field.
      * @param value The value of 'employeeId'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setEmployeeId(java.lang.String value) {
      validate(fields()[0], value);
      this.employeeId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'employeeId' field has been set.
      * @return True if the 'employeeId' field has been set, false otherwise.
      */
    public boolean hasEmployeeId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'employeeId' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder clearEmployeeId() {
      employeeId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstname' field.
      * @return The value.
      */
    public java.lang.String getFirstname() {
      return firstname;
    }


    /**
      * Sets the value of the 'firstname' field.
      * @param value The value of 'firstname'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setFirstname(java.lang.String value) {
      validate(fields()[1], value);
      this.firstname = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'firstname' field has been set.
      * @return True if the 'firstname' field has been set, false otherwise.
      */
    public boolean hasFirstname() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'firstname' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder clearFirstname() {
      firstname = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastname' field.
      * @return The value.
      */
    public java.lang.String getLastname() {
      return lastname;
    }


    /**
      * Sets the value of the 'lastname' field.
      * @param value The value of 'lastname'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setLastname(java.lang.String value) {
      validate(fields()[2], value);
      this.lastname = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'lastname' field has been set.
      * @return True if the 'lastname' field has been set, false otherwise.
      */
    public boolean hasLastname() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'lastname' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder clearLastname() {
      lastname = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.String getEmail() {
      return email;
    }


    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setEmail(java.lang.String value) {
      validate(fields()[3], value);
      this.email = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder clearEmail() {
      email = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'hireDate' field.
      * @return The value.
      */
    public java.lang.String getHireDate() {
      return hireDate;
    }


    /**
      * Sets the value of the 'hireDate' field.
      * @param value The value of 'hireDate'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setHireDate(java.lang.String value) {
      validate(fields()[4], value);
      this.hireDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'hireDate' field has been set.
      * @return True if the 'hireDate' field has been set, false otherwise.
      */
    public boolean hasHireDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'hireDate' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder clearHireDate() {
      hireDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'state' field.
      * @return The value.
      */
    public java.lang.String getState() {
      return state;
    }


    /**
      * Sets the value of the 'state' field.
      * @param value The value of 'state'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setState(java.lang.String value) {
      validate(fields()[5], value);
      this.state = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'state' field has been set.
      * @return True if the 'state' field has been set, false otherwise.
      */
    public boolean hasState() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'state' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder clearState() {
      state = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'role' field.
      * @return The value.
      */
    public java.lang.String getRole() {
      return role;
    }


    /**
      * Sets the value of the 'role' field.
      * @param value The value of 'role'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setRole(java.lang.String value) {
      validate(fields()[6], value);
      this.role = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'role' field has been set.
      * @return True if the 'role' field has been set, false otherwise.
      */
    public boolean hasRole() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'role' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder clearRole() {
      role = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressId' field.
      * @return The value.
      */
    public java.lang.String getAddressId() {
      return addressId;
    }


    /**
      * Sets the value of the 'addressId' field.
      * @param value The value of 'addressId'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setAddressId(java.lang.String value) {
      validate(fields()[7], value);
      this.addressId = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'addressId' field has been set.
      * @return True if the 'addressId' field has been set, false otherwise.
      */
    public boolean hasAddressId() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'addressId' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder clearAddressId() {
      addressId = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address getAddress() {
      return address;
    }


    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setAddress(com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address value) {
      validate(fields()[8], value);
      this.addressBuilder = null;
      this.address = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'address' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address.Builder getAddressBuilder() {
      if (addressBuilder == null) {
        if (hasAddress()) {
          setAddressBuilder(com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address.newBuilder(address));
        } else {
          setAddressBuilder(com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address.newBuilder());
        }
      }
      return addressBuilder;
    }

    /**
     * Sets the Builder instance for the 'address' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder setAddressBuilder(com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address.Builder value) {
      clearAddress();
      addressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'address' field has an active Builder instance
     * @return True if the 'address' field has an active Builder instance
     */
    public boolean hasAddressBuilder() {
      return addressBuilder != null;
    }

    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.EmployeeAvro.Builder clearAddress() {
      address = null;
      addressBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EmployeeAvro build() {
      try {
        EmployeeAvro record = new EmployeeAvro();
        record.employeeId = fieldSetFlags()[0] ? this.employeeId : (java.lang.String) defaultValue(fields()[0]);
        record.firstname = fieldSetFlags()[1] ? this.firstname : (java.lang.String) defaultValue(fields()[1]);
        record.lastname = fieldSetFlags()[2] ? this.lastname : (java.lang.String) defaultValue(fields()[2]);
        record.email = fieldSetFlags()[3] ? this.email : (java.lang.String) defaultValue(fields()[3]);
        record.hireDate = fieldSetFlags()[4] ? this.hireDate : (java.lang.String) defaultValue(fields()[4]);
        record.state = fieldSetFlags()[5] ? this.state : (java.lang.String) defaultValue(fields()[5]);
        record.role = fieldSetFlags()[6] ? this.role : (java.lang.String) defaultValue(fields()[6]);
        record.addressId = fieldSetFlags()[7] ? this.addressId : (java.lang.String) defaultValue(fields()[7]);
        if (addressBuilder != null) {
          try {
            record.address = this.addressBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("address"));
            throw e;
          }
        } else {
          record.address = fieldSetFlags()[8] ? this.address : (com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address) defaultValue(fields()[8]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EmployeeAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<EmployeeAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EmployeeAvro>
    READER$ = (org.apache.avro.io.DatumReader<EmployeeAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.employeeId);

    out.writeString(this.firstname);

    out.writeString(this.lastname);

    out.writeString(this.email);

    out.writeString(this.hireDate);

    out.writeString(this.state);

    out.writeString(this.role);

    out.writeString(this.addressId);

    this.address.customEncode(out);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.employeeId = in.readString();

      this.firstname = in.readString();

      this.lastname = in.readString();

      this.email = in.readString();

      this.hireDate = in.readString();

      this.state = in.readString();

      this.role = in.readString();

      this.addressId = in.readString();

      if (this.address == null) {
        this.address = new com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address();
      }
      this.address.customDecode(in);

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.employeeId = in.readString();
          break;

        case 1:
          this.firstname = in.readString();
          break;

        case 2:
          this.lastname = in.readString();
          break;

        case 3:
          this.email = in.readString();
          break;

        case 4:
          this.hireDate = in.readString();
          break;

        case 5:
          this.state = in.readString();
          break;

        case 6:
          this.role = in.readString();
          break;

        case 7:
          this.addressId = in.readString();
          break;

        case 8:
          if (this.address == null) {
            this.address = new com.placide.k8skafkaavroaepccleanarchibsmicrosemployee.domain.avrobeans.Address();
          }
          this.address.customDecode(in);
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










